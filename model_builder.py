# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# model_output.py
# Created on: 2022-10-21 18:00:01.00000
#   (generated by ArcGIS/ModelBuilder)
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy


# Local variables:
ty_xiaodian_30s_shp = "D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\ty_xiaodian_30s.shp"
ty_xiaodian_90s散 = "ty_xiaodian_90s散"
ty_xiaodian_90s散__2_ = ty_xiaodian_90s散
ty_xiaodian_90s散_shp = "D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\ty_xiaodian_90s散.shp"
地质灾害防治区划图_山西省太原市小店区_shp = "D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区\\地质灾害防治区划图-山西省太原市小店区.shp"
地质防治区划图_tyxiaodian_90s1_shp = "D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\地质防治区划图_tyxiaodian_90s1.shp"
地质防治区划图_tyxiaodian_90s_Multi = "C:\\Users\\Admin\\Documents\\ArcGIS\\Default.gdb\\地质防治区划图_tyxiaodian_90s_Multi"
地质防治区划图_tyxiaodian_90s_Multi__2_ = 地质防治区划图_tyxiaodian_90s_Multi
地质防治区划图_tyxiaodian_90s_Multi__4_ = 地质防治区划图_tyxiaodian_90s_Multi__2_
Export_Output地质防治区划图_shp = "D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\Export Output地质防治区划图.shp"
Export_Output地质防治区划图_shp__2_ = Export_Output地质防治区划图_shp
tyxd_Export_Output地质防治区划图_Frequen = "C:\\Users\\Admin\\Documents\\ArcGIS\\Default.gdb\\tyxd_Export_Output地质防治区划图_Frequen"
Export_Output地质防治区划图_shp__3_ = Export_Output地质防治区划图_shp__2_
Export_Output地质防治区划图_shp__4_ = Export_Output地质防治区划图_shp__3_
tyxd_ExportOutput地质防治区划图_Frequenc1 = "C:\\Users\\Admin\\Documents\\ArcGIS\\Default.gdb\\tyxd_ExportOutput地质防治区划图_Frequenc1"
ty_xiaodian_90s散__3_ = ty_xiaodian_90s散__2_
ty_xiaodian_90s散__6_ = ty_xiaodian_90s散__3_
ty_xiaodian_90s散__5_ = ty_xiaodian_90s散__6_
地质防治区划图（30弧秒，县级成果）_shp = "D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\地质防治区划图（30弧秒，县级成果）.shp"
ty_xiaodian_30s_SpatialJoin__2_ = 地质防治区划图（30弧秒，县级成果）_shp
地质防治区划图_30弧秒，县级成果）_shp__3_ = ty_xiaodian_30s_SpatialJoin__2_
地质防治区划图_30弧秒，县级成果）_shp__4_ = 地质防治区划图_30弧秒，县级成果）_shp__3_
地质防治区划图_30弧秒，县级成果）_shp__5_ = 地质防治区划图_30弧秒，县级成果）_shp__4_
地质防治区划图_30弧秒，县级成果）_shp__6_ = 地质防治区划图_30弧秒，县级成果）_shp__5_
地质防治区划图_30弧秒，县级成果）_shp__7_ = 地质防治区划图_30弧秒，县级成果）_shp__6_
地质防治区划图_30弧秒，县级成果）_shp__8_ = 地质防治区划图_30弧秒，县级成果）_shp__7_
地质防治区划图_30弧秒，县级成果）_shp__9_ = 地质防治区划图_30弧秒，县级成果）_shp__8_
地质防治区划图_30弧秒，县级成果）_shp__10_ = 地质防治区划图_30弧秒，县级成果）_shp__9_
地质防治区划图_30弧秒，县级成果）_shp__11_ = 地质防治区划图_30弧秒，县级成果）_shp__10_
地质防治区划图_30弧秒，县级成果）_shp__12_ = 地质防治区划图_30弧秒，县级成果）_shp__11_
地质防治区划图_30弧秒，县级成果）_shp__13_ = 地质防治区划图_30弧秒，县级成果）_shp__12_
地质防治区划图_30弧秒，县级成果）_shp__14_ = 地质防治区划图_30弧秒，县级成果）_shp__13_
地质防治区划图_30弧秒，县级成果）_shp__15_ = 地质防治区划图_30弧秒，县级成果）_shp__14_
地质防治区划图_30弧秒，县级成果）_shp__16_ = 地质防治区划图_30弧秒，县级成果）_shp__15_
地质防治区划图（30弧秒，县级成果）_shp__2_ = 地质防治区划图_30弧秒，县级成果）_shp__16_
地质防治区划图（30弧秒，县级成果）_shp__4_ = 地质防治区划图（30弧秒，县级成果）_shp__2_
地质防治区划图（30弧秒，县级成果）_shp__8_ = 地质防治区划图（30弧秒，县级成果）_shp__4_
地质防治区划图（30弧秒，县级成果）_shp__5_ = 地质防治区划图（30弧秒，县级成果）_shp__8_
地质防治区划图（30弧秒，县级成果）_shp__7_ = 地质防治区划图（30弧秒，县级成果）_shp__5_
地质防治区划图（30弧秒，县级成果）_shp__6_ = 地质防治区划图（30弧秒，县级成果）_shp__7_
地质防治区划图（30弧秒，县级成果）_shp__9_ = 地质防治区划图（30弧秒，县级成果）_shp__6_
地质防治区划图（30弧秒，县级成果）_shp__10_ = 地质防治区划图（30弧秒，县级成果）_shp__9_
地质防治区划图（30弧秒，县级成果）_shp__11_ = 地质防治区划图（30弧秒，县级成果）_shp__10_
地质防治区划图（30弧秒，县级成果）_shp__12_ = 地质防治区划图（30弧秒，县级成果）_shp__11_
地质防治区划图（30弧秒，县级成果）_shp__13_ = 地质防治区划图（30弧秒，县级成果）_shp__12_
地质防治区划图（30弧秒，县级成果）_shp__14_ = 地质防治区划图（30弧秒，县级成果）_shp__13_
地质防治区划图（30弧秒，县级成果）_shp__3_ = 地质防治区划图（30弧秒，县级成果）_shp__14_

# Process: 联合
arcpy.Union_analysis("D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\ty_xiaodian_90s散.shp #;D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区\\地质灾害防治区划图-山西省太原市小店区.shp #", 地质防治区划图_tyxiaodian_90s1_shp, "ALL", "", "GAPS")

# Process: 多部件至单部件
arcpy.MultipartToSinglepart_management(地质防治区划图_tyxiaodian_90s1_shp, 地质防治区划图_tyxiaodian_90s_Multi)

# Process: 添加字段
arcpy.AddField_management(地质防治区划图_tyxiaodian_90s_Multi, "dz_mj", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 计算字段
arcpy.CalculateField_management(地质防治区划图_tyxiaodian_90s_Multi__2_, "dz_mj", "!shape.area!", "PYTHON_9.3", "")

# Process: 筛选
arcpy.Select_analysis(地质防治区划图_tyxiaodian_90s_Multi__4_, Export_Output地质防治区划图_shp, "\"等级值\" <>0")

# Process: 频数
arcpy.Frequency_analysis(Export_Output地质防治区划图_shp, tyxd_Export_Output地质防治区划图_Frequen, "编号", "dz_mj")

# Process: 连接字段
arcpy.JoinField_management(Export_Output地质防治区划图_shp, "编号", tyxd_Export_Output地质防治区划图_Frequen, "编号", "OBJECTID;FREQUENCY;编号;dz_mj")

# Process: 添加字段 (2)
arcpy.AddField_management(Export_Output地质防治区划图_shp__2_, "djz_zb", "DOUBLE", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 计算字段 (2)
arcpy.CalculateField_management(Export_Output地质防治区划图_shp__3_, "djz_zb", "[dz_mj] / [dz_mj_1] * [等级值]", "VB", "")

# Process: 频数 (2)
arcpy.Frequency_analysis(Export_Output地质防治区划图_shp__4_, tyxd_ExportOutput地质防治区划图_Frequenc1, "编号", "djz_zb")

# Process: 连接字段 (2)
arcpy.JoinField_management(ty_xiaodian_90s散, "编号", tyxd_ExportOutput地质防治区划图_Frequenc1, "编号", "FREQUENCY;编号;djz_zb")

# Process: 添加字段 (3)
arcpy.AddField_management(ty_xiaodian_90s散__2_, "等级", "SHORT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 计算字段 (3)
arcpy.CalculateField_management(ty_xiaodian_90s散__3_, "等级", "[djz_zb]", "VB", "")

### 4.11

# Process: 删除字段
arcpy.DeleteField_management(ty_xiaodian_90s散__6_, "Id;ORIG_FID;FREQUENCY;编号_1;djz_zb")

################ 5.

# Process: 空间连接
arcpy.SpatialJoin_analysis(ty_xiaodian_30s_shp, ty_xiaodian_90s散__5_, 地质防治区划图（30弧秒，县级成果）_shp, 
                           "JOIN_ONE_TO_ONE", "KEEP_ALL", 
                           "area_code \"area_code\" true true false 254 Text 0 0 ,First,#,D:\\山西省地质格网数据处理\\山西-太原市及10个区县\\太原-小店区3个地质图\\太原市小店区处理过程\\ty_xiaodian_30s.shp,area_code,-1,-1;编号 \"编号\" true true false 5 Long 0 5 ,First,#,ty_xiaodian_90s散,编号,-1,-1;等级 \"等级\" true true false 5 Long 0 5 ,First,#,ty_xiaodian_90s散,等级,-1,-1", 
                           "INTERSECT", "", "")

# Process: 添加字段 (4)
arcpy.AddField_management(地质防治区划图（30弧秒，县级成果）_shp, "物理主", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (5)
arcpy.AddField_management(ty_xiaodian_30s_SpatialJoin__2_, "调查对", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (6)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__3_, "行省", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (7)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__4_, "行市", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (8)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__5_, "行县", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (9)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__6_, "更时", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (10)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__7_, "写时", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (11)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__8_, "数据状", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (12)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__9_, "审核流", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (13)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__10_, "审核状", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (14)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__11_, "行业", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (15)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__12_, "日期分", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (16)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__13_, "批次号", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (17)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__14_, "乡", "TEXT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 添加字段 (18)
arcpy.AddField_management(地质防治区划图_30弧秒，县级成果）_shp__15_, "等级值", "SHORT", "", "", "", "", "NULLABLE", "NON_REQUIRED", "")

# Process: 删除字段 (2)
arcpy.DeleteField_management(地质防治区划图_30弧秒，县级成果）_shp__16_, "Join_Count;TARGET_FID;编号")

# Process: 计算字段 (4)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__2_, "物理主", "[FID] +1401050001", "VB", "")

# Process: 计算字段 (5)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__4_, "行省", "\"140000\"", "VB", "")

# Process: 计算字段 (6)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__8_, "乡", "[area_code]", "VB", "")

# Process: 计算字段 (8)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__5_, "等级值", "[等级]", "VB", "")

# Process: 计算字段 (7)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__7_, "行市", "Left( [乡],4 )&\"00\"", "VB", "")

# Process: 计算字段 (9)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__6_, "行县", "Left( [乡],6 )", "VB", "")

# Process: 计算字段 (10)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__9_, "更时", "\"20221021 11:00:00\"", "VB", "")

# Process: 计算字段 (11)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__10_, "数据状", "\"U\"", "VB", "")

# Process: 计算字段 (12)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__11_, "审核流", "\"3\"", "VB", "")

# Process: 计算字段 (13)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__12_, "审核状", "\"2\"", "VB", "")

# Process: 计算字段 (14)
arcpy.CalculateField_management(地质防治区划图（30弧秒，县级成果）_shp__13_, "行业", "\"019\"", "VB", "")

# Process: 删除字段 (3)
arcpy.DeleteField_management(地质防治区划图（30弧秒，县级成果）_shp__14_, "area_code;等级")

